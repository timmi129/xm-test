security:
#    encoders:
#        App\Entity\User:
#            algorithm: bcrypt

    enable_authenticator_manager: true
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
    firewalls:
        login:
            pattern: ^/api/v1/login
            stateless: true
            security: false
            json_login:
                check_path: /api/v1/login
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure

        register:
            pattern: ^/api/v1/register
            stateless: true
            security: false

        api:
            pattern: ^/api/v1
            stateless: true
            provider: app_user_provider
            custom_authenticators:
                    - app.authenticator

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/api/v1/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/v1/register, roles: IS_AUTHENTICATED_ANONYMOUSLY }
#        - { path: ^/api/v1,       roles: IS_AUTHENTICATED_FULLY }
